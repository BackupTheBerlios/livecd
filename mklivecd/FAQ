# $Id: FAQ,v 1.7 2003/10/02 14:21:18 jaco Exp $

Q: How do I create a tiny (truly minimal) bootable Mandrake
   LiveCD?
A: Here is a step by step process of creating your own Mandrake
   installation and creating a LiveCD image from it. (You can
   customise the process by adding additional packages, but the
   underlying concepts should stay the same)

   1. Login as root, using "su -c"
   2. Create a base directory to hold the minimal installation:
      "mkdir -p /tmp/minimal"
   3. Install the Mandrake base system:
      "urpmi basesystem devfsd harddrake --root /tmp/minimal"
   4. Enable shadow passwords in the image by issuing:
      "chroot /tmp/minimal /usr/sbin/pwconv"
   5. Set your root password ('root') within the image:
      "chroot /tmp/minimal"
      "echo 'root' | passwd --stdin root"
      "exit"
   6. Create a LiveCD image from the minimal installation:
      "mklivecd --rootdir /tmp/minimal minimal.iso"
   7. Burn the resulting minimal.iso to CD-R and enjoy :)


Q: How much does the default compression algorithm compress the
   actual LiveCD root?
A: Exact figures differ from installation to installation, but as
   a thumb-suck, you can work on a compression ratio of 40%, i.e.
   a 1GB initial filesystem _should_ compress to 400MB.


Q: Can I adjust the compression parameters for either a faster
   LiveCD or a smaller one?
A: Indeed. The LiveCD creation script has two options, --blocksize
   and --looptype that allows you to adjust the behaviour of the
   compression algorithm (--blocksize, default 64K) and the type
   of compression used (--looptype, default cloop).

   Some testes have beed done of the effect of these options on
   both and speed, use your own judgement to see what is best for
   your particular application. (All tests were done with an
   uncompressed Knoppix v3.3 image.)

   The following table lists the descriptions of the images that
   were used in these tests. 'Compression' is the type of
   compression (none = uncompressed, cloop = cloop.o, bzloop =
   bzloop.o) and 'Block' is the blocksize passed to the various
   create compressed fs commands:

   Compression,   Block, Name:
   ------------------------------------------
          none,    none, knoppix.iso
         cloop,     64K, knoppix.iso.clp-64
         cloop,    224K, knoppix.iso.clp-224
        bzloop,     64K, knoppix.iso.bzlp-64
        bzloop,    224K, knoppix.iso.bzlp-224

   This table lists the sizes of the files on disk. 'Size' is
   the actual size as reported by the "du -k" command. 'Ratio'
   is calculated with size/uncompressed_size*100:

          Size,   Ratio, Name:
   ------------------------------------------
    1,871,360K, 100.00%, knoppix.iso
      708,656K,  37.87%, knoppix.iso.clp-64
      698,124K,  37.31%, knoppix.iso.clp-224
      684,404K,  36.57%, knoppix.iso.bzlp-64
      655,068K,  35.00%, knoppix.iso.bzlp-224

   This following table lists some timings for performing a
   (hopefully) expensive I/O operation on the mounted image.
   'Time' is the time taken for the "insmod, mount, ls -alR,
   tar -cf, umount, rmmod" and 'Ratio' is calculated with
   time/uncompressed_time*100.

          Time,   Ratio, Name:
   ------------------------------------------
           31s, 100.00%, knoppix.iso
           38s, 122.58%, knoppix.iso.clp-64
           43s, 138.71%, knoppix.iso.clp-224
           49s, 158.06%, knoppix.iso.bzlp-64
           73s, 235.48%, knoppix.iso.bzlp-224


Q: How do I change my keyboard layout?
A: By default the script installs a keyboard layout for en_US.
   You can change this behaviour on the LiveCD in two ways:

   1. On bootup, specify "livecd keyb=<language>" at the isolinux
      prompt. For instance, "livecd keyb=en_UK" will select the
      keyboard layout as used in the UK.
   2. If you are building a specific CD which should cater for a
      specific keyboard layout, specify '--keyboard=<language>' on
      the mklivecd command-line to automatically add a default
      option to the isolinux configuration.


Q: What are these lss images that isolinux can display? How do I
   generate them?
A: Ahhh, you found the '--iso-bgimage' option. The LSS image
   format is a run-length encoded format, chosen by the syslinux
   author as a fast/easy way of diaplying boot images. Here is
   how you create them:

   1. Create a 16 colour (indexed palette) BMP file with a
      resolution of
   2. Convert the BMP to PPM format, using the "bmptoppm" utility.
      (Part of the netpbm package.) An example of the usage is:
      "bmptoppm -verbose mycd.bmp >mycd.ppm"
   3. Convert the PPM format to LSS, using the "ppmtolss16"
      utility. (Part of the syslinux package.) An example of the
      usage is:
      "ppmtolss16 \#3a3e6e=0 \#d0d0d0=7 <mycd.ppm >mycd.lss" (*)

   (*) The command show the use of palette remapping, which might
       be needed, depending on your original BMP image. ISOLinux
       uses colour index 0 for the background and index 7 for the
       foreground text. In the above example the remapping (using
       the colour value) is done to get the correct effect. (The
       utility expects colours to be indicated by #, in the above
       example these are escaped as to not be identified as a
       comment by the bash shell.)


Q: Why are the isolinux images so limited? I know that Mandrake
   uses more than 16 coulour on their installation disks!
A: Mandrake has made a modification to the isolinux program that
   allows for the display of images up to 128 colours. To utilise
   this option, follow the instructions (and script) in
   /usr/share/doc/syslinux-1.76/README.graphic. In addition, to
   specifying the created boot message with the '--iso-bootmsg'
   flag, you would need to specify '--iso-graphic' on the mklivecd
   command-line to enable the use of the correct isolinux boot
   image binary.

