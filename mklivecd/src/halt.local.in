#!/initrd/bin/ash
#
# This script is part of mklivecd and is here to:
#   1) Check if we should eject the CD
#   2) If so unmount the cloop and CD, ensuring we have everything necessary
#      below
#   3) Eject the CD with a prompt (so eject must be in memory)
#   4) Run /sbin/halt as it would normally be run, but halt needs to be in
#      memory. We call it because the halt script would call /sbin/halt
#      where /sbin was a link to the cloop image (no longer accessible) so we
#      either need to have our own halt or pivot_root
#
# Copyright (C) 2003, Buchan Milne <bgmilne@cae.co.za>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# The latest version of this script can be found at http://livecd.berlios.de
#
# $Id: halt.local.in,v 1.5 2003/12/04 10:37:34 jaco Exp $
#

# Variables
MNTCDROM="/cdrom"
MNTLIVECD="/loopfs"

#grep -q noeject /proc/cmdline && exit 0 ||:
grep -q eject /proc/cmdline || exit 0

# make sure we are the last process to execute
# (replace current running process)
if [ ! -f /tmp/.halt.local ]; then
	echo "" >/tmp/.halt.local
	exec /initrd/sbin/halt.local
fi

# We probably want to be able to localise this:
MSG="Remove the CD, and press [Enter] to power the computer off"

# Copy the binaries we need
cp -f /sbin/halt /usr/bin/eject /initrd/sbin

# Find which device we want to eject:
#DEVICE=`awk "/initrd\\$MNTCDROM/ {print \$1}" /proc/mounts`
DEVICE=`grep "$MNTCDROM" /proc/mounts`
DEVICE=${DEVICE// *}

# Unmount the filesystems
# We can unmount proc now
#echo "Unmounting /proc"
#/initrd/bin/umount /proc 2>/dev/null

echo "Unmounting /initrd$MNTLIVECD"
/initrd/bin/umount /initrd$MNTLIVECD 2>/dev/null

# Unload the cloop module before trying to umount/eject CD
/initrd/sbin/rmmod -a
/initrd/sbin/rmmod cloop

echo "Unmounting /initrd$MNTCDROM"
/initrd/bin/umount /initrd$MNTCDROM 2>/dev/null

# Hopefully we are unmounted now, try eject
echo "Ejecting $DEVICE"

/initrd/sbin/eject $DEVICE 2>/dev/null

/initrd/bin/ash < /dev/console 1>/dev/console

echo "$MSG"
read key </dev/console

# We can unmount proc now
echo "Unmounting /proc"
/initrd/bin/umount /proc 2>/dev/null

#Hope this works ;-)
/initrd/sbin/halt -i -d -p >/dev/null 2>/dev/null
